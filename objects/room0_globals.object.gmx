<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial setup
global.tilesize = 16
global.gridsize = 50
global.wallmute = 2

// grid positions of walls
// grid stores sound travel cost multiplier
global.map = ds_grid_create(50, 50)
// fill with zeroes explicitly
ds_grid_set_region(global.map, 0, 0, 49, 49, 0)
// outer walls
// impenetrable to sound
// north
ds_grid_set_region(global.map, 0, 0, 49, 1, 99)
// west
ds_grid_set_region(global.map, 0, 2, 1, 49, 99)
// southwest
ds_grid_set_region(global.map, 2, 48, 21, 49, 99)
// southeast
ds_grid_set_region(global.map, 26, 48, 49, 49, 99)
// east
ds_grid_set_region(global.map, 48, 2, 49, 48, 99)

// interior walls
// SSW straight
ds_grid_set_region(global.map, 8, 38, 9, 49, global.wallmute)
// WSW straight
ds_grid_set_region(global.map, 2, 32, 7, 33, global.wallmute)
// NNW straight
ds_grid_set_region(global.map, 12, 2, 13, 5, global.wallmute)
// ENE straight
ds_grid_set_region(global.map, 42, 14, 47, 15, global.wallmute)
// S center hook (NS part)
ds_grid_set_region(global.map, 26, 32, 27, 47, global.wallmute)
// S center hook (EW part)
ds_grid_set_region(global.map, 12, 32, 25, 33, global.wallmute)
// S center hook (small jut)
ds_grid_set_region(global.map, 18, 29, 19, 31, global.wallmute)
// SSW hook (NS part)
ds_grid_set_region(global.map, 20, 38, 21, 47, global.wallmute)
// SSW hook (EW part)
ds_grid_set_region(global.map, 14, 38, 19, 39, global.wallmute)
// NW small floater
ds_grid_set_region(global.map, 12, 2, 14, 5, global.wallmute)
// SE small floater
ds_grid_set_region(global.map, 42, 42, 43, 44, global.wallmute)
ds_grid_set_region(global.map, 44, 42, 44, 43, global.wallmute)
// major interior (starting from W end)
// vertical
ds_grid_set_region(global.map, 6, 10, 7, 19, global.wallmute)
// horizontal
ds_grid_set_region(global.map, 8, 18, 19, 19, global.wallmute)
// vertical
ds_grid_set_region(global.map, 18, 20, 19, 25, global.wallmute)
/// connection
ds_grid_set_region(global.map, 20, 22, 27, 23, global.wallmute)
// jut
ds_grid_set_region(global.map, 22, 24, 25, 25, global.wallmute)
// vertical
ds_grid_set_region(global.map, 28, 6, 29, 27, global.wallmute)
// final horizontal
ds_grid_set_region(global.map, 30, 14, 35, 15, global.wallmute)

// create floor and possibly walls as appropriate
for (i=0; i&lt;global.gridsize; ++i) {
    for (j=0; j&lt;global.gridsize; ++j) {
        if ds_grid_get(global.map, i, j) != 0 {
            instance_create(i*global.tilesize, j*global.tilesize, Wall)
        }
        instance_create(i*global.tilesize, j*global.tilesize, Floor)
    }
}

global.soundsources = ds_list_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Determine volume at all locations
for (i=0; i&lt;global.gridsize; ++i) {
    for (j=0; j&lt;global.gridsize; ++j) {
        global.vols[i, j] = 0
    }
}

var to_check_x = ds_stack_create()
var to_check_y = ds_stack_create()
var to_check_vol = ds_stack_create()

for (i=0; i&lt;ds_list_size(global.soundsources); ++i) {
    var thing = ds_list_find_value(global.soundsources, i);
    ds_stack_push(to_check_x, thing.tilex)
    ds_stack_push(to_check_y, thing.tiley)
    ds_stack_push(to_check_vol, thing.loudness)
}

global.vols = fillVolume(to_check_x, to_check_y, to_check_vol)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
